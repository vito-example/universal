@mixin make-button-variants($name) {
  #{$name} {
    display: inline-block;
    font-family: $font-family;
    font-size: toRem(mapValue($button-sizes, default, size));
    font-weight: $button-font-weight;
    border: $button-border;
    padding: toRem(mapValue($button-sizes, default, y)) toRem(mapValue($button-sizes, default, x));
    text-decoration: $button-text-decoration;
    cursor: pointer;
    border-radius: toRem($button-border-radius);
    transition: $button-transition;

    &.is-disabled {
      background-color: transparent;
      color: #D2D2D2;
      border-color: #D2D2D2 !important;
      cursor: default;
      box-shadow: none !important;

      &:hover {
        background-color: transparent;
        color: #D2D2D2;
        border-color: #D2D2D2 !important;
      }
    }

    &__icon {
      transition: $button-transition;
    }
  }

  @each $variant, $hex in $variants {
    #{$name}#{$modifier-separator}#{$variant} {
      background-color: variantsMap($variant, default);
      border-color: variantsMap($variant, default);
      color: variantsMap($variant, text);

      &:hover {
        background-color: variantsMap($variant, hover);
      }

      &#{$name}#{$modifier-separator}#{shadow} {
        box-shadow: toRem($button-box-shadow-h) toRem($button-box-shadow-v) toRem($button-box-shadow-blur) rgba(
                            variantsMap($variant, hover), $button-box-shadow-opacity
                    );
      }

      &#{$name}#{$modifier-separator}#{border} {
        border-color: variantsMap($variant, hover);
      }

      &#{$name}#{$modifier-separator}#{outline} {
        background-color: transparent;
        border-color: variantsMap($variant, hover);

        &:hover {
          background-color: variantsMap($variant, hover);
          color: white;
        }
      }
    }
  }

  #{$name}#{$modifier-separator}#{link} {
    background-color: transparent;
    color: variantsMap(primary, default);
    padding: 0;

    &:hover {
      color: map-get($colors, 'dark-green') !important;
      text-decoration: underline;
    }

    @include at(#{$name}#{$modifier-separator}#{sm}, true) {
      padding: 0;
    }
  }

  @each $size in ('sm') {
    #{$name}#{$modifier-separator}#{$size} {
      font-size: toRem(mapValue($button-sizes, $size, size));
      font-weight: mapValue($button-sizes, $size, weight);
      padding: toRem(mapValue($button-sizes, $size, y)) toRem(mapValue($button-sizes, $size, x));
      border-radius: toRem(map-get($base-border-radius, $size));
    }
  }
}
